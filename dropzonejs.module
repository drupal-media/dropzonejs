<?php

/**
 * @file
 * Contains dropzonejs.module.
 */

use Drupal\Core\Routing\RouteMatchInterface;

/**
 * Implements hook_help().
 */
function dropzonejs_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the dropzonejs module.
    case 'help.page.dropzonejs':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('DropzoneJS') . '</p>';
      return $output;

    default:
  }
}

/**
 * Implements hook_theme().
 */
function dropzonejs_theme() {
  return [
    'dropzonejs' => [
      'render element' => 'element',
    ],
  ];
}

/**
 * Prepares variables for dropzone form element.
 *
 * Default template: dropzonejs.html.twig.
 *
 * @param array $variables
 *   An associative array containing:
 *   - element: A render element representing the file.
 */
function template_preprocess_dropzonejs(&$variables) {
  $element = $variables['element'];

  $variables['attributes'] = [];
  if (isset($element['#id'])) {
    $variables['attributes']['id'] = $element['#id'];
  }
  if (!empty($element['#attributes']['class'])) {
    $variables['attributes']['class'] = (array) $element['#attributes']['class'];
  }

  $variables['uploaded_files'] = $element['uploaded_files'];
}

/**
 * Implements hook_library_info_alter().
 */
function dropzonejs_library_info_alter(&$libraries, $extension) {
  if ($extension == 'dropzonejs' && \Drupal::moduleHandler()->moduleExists('libraries')) {
    $libraries['dropzonejs']['js'] = ['/' . libraries_get_path('dropzone') . '/dist/min/dropzone.min.js' => []];
    $libraries['dropzonejs']['css']['component'] = ['/' . libraries_get_path('dropzone') . '/dist/min/dropzone.min.css' => []];
  }
}
